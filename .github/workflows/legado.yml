name: Legado Test Build

on:
  workflow_dispatch:

jobs:

  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-ver.outputs.version }}
      versionL: ${{ steps.set-ver.outputs.versionL }}
    steps:
      - id: set-ver
        run: |
          echo "version=$(date -d "8 hour" -u +3.%y.%m%d%H)" >> $GITHUB_OUTPUT
          echo "versionL=$(date -d "8 hour" -u +3.%y.%m%d%H%M)" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.prepare.outputs.version }}
      VERSIONL: ${{ needs.prepare.outputs.versionL }}
    steps:
      - name: clone legado repo
        uses: actions/checkout@v4
        with:
          repository: gedoor/legado
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Clear 18PlusList.txt
        run: |
          echo "清空18PlusList.txt"
          echo "">$GITHUB_WORKSPACE/app/src/main/assets/18PlusList.txt
      - name: remove firebase
        run: |
          sed "/libs.firebase/d"                $GITHUB_WORKSPACE/app/build.gradle -i
          sed "/firebase/d"                     $GITHUB_WORKSPACE/gradle/libs.versions.toml -i
          sed "/libs.plugins.google.services/d" $GITHUB_WORKSPACE/app/build.gradle -i
          sed "/libs.plugins.google.services/d" $GITHUB_WORKSPACE/build.gradle -i
          rm $GITHUB_WORKSPACE/app/google-services.json

      - name: Release Apk Sign
        run: |
          echo "给apk增加签名"
          cp $GITHUB_WORKSPACE/.github/workflows/legado.jks $GITHUB_WORKSPACE/app/legado.jks
          sed '$a\RELEASE_STORE_FILE=./legado.jks'          $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_KEY_ALIAS=legado'                 $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_STORE_PASSWORD=gedoor_legado'     $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_KEY_PASSWORD=gedoor_legado'       $GITHUB_WORKSPACE/gradle.properties -i

      - name: Build With Gradle
        continue-on-error: true
        run: |
          echo "设置共存"
          sed "s/'.release'/'.releaseA'/" $GITHUB_WORKSPACE/app/build.gradle -i
          sed 's/"app_name">阅读/"app_name">阅读A/' $GITHUB_WORKSPACE/app/src/main/res/values-zh/strings.xml -i
          sed 's/"receiving_shared_label">阅读/"receiving_shared_label">阅读A/' $GITHUB_WORKSPACE/app/src/main/res/values-zh/strings.xml -i
          echo "统一版本号"
          sed "/def version/c def version = \"${{ env.VERSION }}\"" $GITHUB_WORKSPACE/app/build.gradle -i
          echo "开始构建"
          chmod +x gradlew
          ./gradlew assembleapprelease --build-cache --parallel --no-daemon --warning-mode all
          echo "修改APK文件名"
          mkdir -p ${{ github.workspace }}/apk/
          for file in `ls ${{ github.workspace }}/app/build/outputs/apk/*/*/*.apk`; do
            mv "$file" ${{ github.workspace }}/apk/legado_app_releaseA_${{ env.VERSIONL }}.apk
          done
          echo "移动mapping文件"
          mkdir -p ${{ github.workspace }}/mapping/
          for file in `ls ${{ github.workspace }}/app/build/outputs/mapping/*/mapping.txt`; do
            mv "$file" ${{ github.workspace }}/mapping/mapping.txt
          done

      - name: Move Missing Rules Files
        run: |
          echo "移动missing_rules.txt文件"
          mkdir -p ${{ github.workspace }}/mapping/
          for file in `ls ${{ github.workspace }}/app/build/outputs/mapping/*/missing_rules.txt`; do
            mv "$file" ${{ github.workspace }}/mapping/missing_rules.txt
          done
      - name: Upload Missing Rules File To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: legado.app.releaseA.mapping.missing_rules
          if-no-files-found: ignore
          path: ${{ github.workspace }}/mapping/missing_rules.txt

      - name: Check Build production
        run: |
          cd ${{ github.workspace }}/apk/
          if [ ! -e legado_*.apk ]; then
            echo "Build production not found! Check gradle logs."
            exit 1
          fi

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: legado.app.releaseA
          if-no-files-found: ignore
          path: ${{ github.workspace }}/apk/*.apk

      - name: Upload Mapping File To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: legado.app.releaseA.mapping
          if-no-files-found: ignore
          path: ${{ github.workspace }}/mapping/mapping.txt
