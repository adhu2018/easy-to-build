name: Legado Test Build

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'branch name'
        required: false
        type: string
      build_web:
        description: 'rebuild web'
        required: false
        default: false
        type: boolean
      debug:
        description: 'is debug'
        required: false
        default: false
        type: boolean

jobs:

  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-ver.outputs.version }}
      versionL: ${{ steps.set-ver.outputs.versionL }}
    steps:
      - id: set-ver
        run: |
          echo "version=$(date -d "8 hour" -u +3.%y.%m%d%H)" >> $GITHUB_OUTPUT
          echo "versionL=$(date -d "8 hour" -u +3.%y.%m%d%H%M)" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.prepare.outputs.version }}
      VERSIONL: ${{ needs.prepare.outputs.versionL }}
    steps:
      - name: clone repo
        uses: actions/checkout@v4
        with:
          repository: adhu2018/legado
          fetch-depth: 0
      - name: checkout branch
        if: ${{ inputs.branch_name && github.actor == 'adhu2018' }}
        run: |
          git branch
          git switch ${{ inputs.branch_name }}

      - name: set up nodejs
        if:  ${{ inputs.build_web }}
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: set up pnpm
        if:  ${{ inputs.build_web }}
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        if:  ${{ inputs.build_web }}
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        name: Setup pnpm cache
        if:  ${{ inputs.build_web }}
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/web/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build web
        if:  ${{ inputs.build_web }}
        continue-on-error: true
        working-directory: modules/web
        run: |
          pnpm i
          pnpm build

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Clear 18PlusList.txt
        run: |
          echo "清空18PlusList.txt"
          echo "">./app/src/main/assets/18PlusList.txt
      - name: remove firebase
        run: |
          sed "/libs.firebase/d"                ./app/build.gradle -i
          sed "/firebase/d"                     ./gradle/libs.versions.toml -i
          sed "/google-services/d"              ./gradle/libs.versions.toml -i
          sed "/libs.plugins.google.services/d" ./app/build.gradle -i
          sed "/libs.plugins.google.services/d" ./build.gradle -i
          rm ./app/google-services.json

      - name: abi
        run : |
          sed "s/javaCompileOptions/ndk {\nabiFilters 'arm64-v8a'\n}\njavaCompileOptions/" ./app/build.gradle -i
          

      - name: Apk Sign
        run: |
          echo "给apk增加签名"
          cp ./.github/workflows/legado.jks ./app/legado.jks
          sed '$a\RELEASE_STORE_FILE=./legado.jks'      ./gradle.properties -i
          sed '$a\RELEASE_KEY_ALIAS=legado'             ./gradle.properties -i
          sed '$a\RELEASE_STORE_PASSWORD=gedoor_legado' ./gradle.properties -i
          sed '$a\RELEASE_KEY_PASSWORD=gedoor_legado'   ./gradle.properties -i

      - name: set to beta version
        run: |
          echo "设置共存"
          sed "s/'.release'/'.releaseA'/" ./app/build.gradle -i
          sed 's/"app_name">阅读/"app_name">阅读A/' ./app/src/main/res/values-zh/strings.xml -i
          sed 's/"receiving_shared_label">阅读/"receiving_shared_label">阅读A/' ./app/src/main/res/values-zh/strings.xml -i

      - name: minifyEnabled
        if:  ${{ inputs.debug }}
        run: |
          sed "/minifyEnabled/c minifyEnabled false" ./app/build.gradle  -i
          sed "/shrinkResources/c shrinkResources = false" ./app/build.gradle  -i

      - name: Build With Gradle
        continue-on-error: true
        run: |
          echo "统一版本号"
          gitCommits=$(git rev-list origin/sync --count)
          realCommits=$(git rev-list HEAD --count)
          sed "/def version/c def version = \"${{ env.VERSION }}+$realCommits\"" ./app/build.gradle -i
          sed "/def gitCommits/c def gitCommits = $gitCommits" ./app/build.gradle -i
          echo "开始构建"
          chmod +x gradlew
          ./gradlew assembleapprelease --build-cache --parallel --no-daemon --warning-mode all

      - name: move apk
        run: |
          echo "修改APK文件名"
          mkdir -p ${{ github.workspace }}/apk/
          for file in `ls ${{ github.workspace }}/app/build/outputs/apk/*/*/*.apk`; do
            mv "$file" ${{ github.workspace }}/apk/legado_app_releaseA_${{ env.VERSIONL }}.apk
          done

      - name: Check Build production
        run: |
          cd ${{ github.workspace }}/apk/
          if [ ! -e legado_*.apk ]; then
            echo "Build production not found! Check gradle logs."
            exit 1
          fi

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: legado.app.releaseA
          if-no-files-found: ignore
          path: ${{ github.workspace }}/apk/*.apk
